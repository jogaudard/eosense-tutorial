[
  {
    "objectID": "comparison.html",
    "href": "comparison.html",
    "title": "Comparison with eosAC-T/O",
    "section": "",
    "text": "library(tidyverse)\n\nfluxes_eos_read &lt;- read_csv(\"compare_data/chamber_data.csv\")\n#&gt; Rows: 57 Columns: 58\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr  (2): Chamber Error Status, Metadata\n#&gt; dbl (54): Julian Day, Analyzer Error Status, Multiplexer Port, Measurement D...\n#&gt; lgl  (2): Chamber Serial, Multiplexer Serial\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfluxes_eos &lt;- fluxes_eos_read |&gt;\n    mutate(\n        date = as.Date(`Julian Day`, origin = as.Date(\"2024-01-01\")),\n        seconds = (`Julian Day` - floor(`Julian Day`)) * 24 * 3600,\n        time = hms::as_hms(seconds),\n        datetime = as_datetime(paste(date, time))\n    ) |&gt;\n    select(datetime, everything())\n\n# View(fluxes_eos)\n\n\nfluxible_df &lt;- readRDS(\"compare_data/fluxible_df.rds\")\n\nfluxes_eos_id &lt;- fluxes_eos |&gt;\n  filter(\n    datetime &gt; ymd_hms(\"2024-12-12 00:00:01\")\n  ) |&gt;\n  arrange(datetime) |&gt;\n  rowid_to_column(\"id\")\n\nfluxible_df_id &lt;- fluxible_df |&gt;\n  filter(\n    f_datetime &gt; ymd_hms(\"2024-12-12 00:03:01\")\n  ) |&gt;\n  arrange(f_datetime) |&gt;\n  rowid_to_column(\"id\")\n\ncomparison_fluxes &lt;- left_join(fluxible_df_id, fluxes_eos_id, by = \"id\") |&gt;\n  rename(\n    eos_flux = `Flux CO2 (E) (umol/m^2/s)`\n  )\n\n\n\n\n\n\n\n\n\nFigure 1"
  },
  {
    "objectID": "tutorial.html",
    "href": "tutorial.html",
    "title": "Full tutorial",
    "section": "",
    "text": "In this section we will use the data in the ex_data folder. More ressources on data import are available in this vignette on the fluxible website.\n\n\nImporting the log and turning it into a dataframe with chamber ID (port nb), chamber closing time and re-opening time.\n\nlibrary(tidyverse)\n\n# building col names\nchamber_colnames &lt;- c(\n    \"port\", \"valvestatus\", \"chamberstatus\",\n    \"aux1\", \"aux2\", \"aux3\", \"aux4\", \"aux5\",\n    \"temperaturev\", \"pressure\"\n    )\nlog_colnames &lt;- c(\n    \"epochtime\",\n    rep(chamber_colnames, times = 12)\n)\n\nchamber_log_read &lt;- list.files(\n    \"ex_log\",\n    full.names = TRUE\n) |&gt;\n    map_dfr(\n        read_log,\n        col_names = log_colnames\n    )\n#&gt; Warning: Duplicated column names deduplicated: 'port' =&gt; 'port_1' [12],\n#&gt; 'valvestatus' =&gt; 'valvestatus_1' [13], 'chamberstatus' =&gt; 'chamberstatus_1'\n#&gt; [14], 'aux1' =&gt; 'aux1_1' [15], 'aux2' =&gt; 'aux2_1' [16], 'aux3' =&gt; 'aux3_1'\n#&gt; [17], 'aux4' =&gt; 'aux4_1' [18], 'aux5' =&gt; 'aux5_1' [19], 'temperaturev' =&gt;\n#&gt; 'temperaturev_1' [20], 'pressure' =&gt; 'pressure_1' [21], 'port' =&gt; 'port_2'\n#&gt; [22], 'valvestatus' =&gt; 'valvestatus_2' [23], 'chamberstatus' =&gt;\n#&gt; 'chamberstatus_2' [24], 'aux1' =&gt; 'aux1_2' [25], 'aux2' =&gt; 'aux2_2' [26],\n#&gt; 'aux3' =&gt; 'aux3_2' [27], 'aux4' =&gt; 'aux4_2' [28], 'aux5' =&gt; 'aux5_2' [29],\n#&gt; 'temperaturev' =&gt; 'temperaturev_2' [30], 'pressure' =&gt; 'pressure_2' [31],\n#&gt; 'port' =&gt; 'port_3' [32], 'valvestatus' =&gt; 'valvestatus_3' [33], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_3' [34], 'aux1' =&gt; 'aux1_3' [35], 'aux2' =&gt; 'aux2_3' [36],\n#&gt; 'aux3' =&gt; 'aux3_3' [37], 'aux4' =&gt; 'aux4_3' [38], 'aux5' =&gt; 'aux5_3' [39],\n#&gt; 'temperaturev' =&gt; 'temperaturev_3' [40], 'pressure' =&gt; 'pressure_3' [41],\n#&gt; 'port' =&gt; 'port_4' [42], 'valvestatus' =&gt; 'valvestatus_4' [43], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_4' [44], 'aux1' =&gt; 'aux1_4' [45], 'aux2' =&gt; 'aux2_4' [46],\n#&gt; 'aux3' =&gt; 'aux3_4' [47], 'aux4' =&gt; 'aux4_4' [48], 'aux5' =&gt; 'aux5_4' [49],\n#&gt; 'temperaturev' =&gt; 'temperaturev_4' [50], 'pressure' =&gt; 'pressure_4' [51],\n#&gt; 'port' =&gt; 'port_5' [52], 'valvestatus' =&gt; 'valvestatus_5' [53], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_5' [54], 'aux1' =&gt; 'aux1_5' [55], 'aux2' =&gt; 'aux2_5' [56],\n#&gt; 'aux3' =&gt; 'aux3_5' [57], 'aux4' =&gt; 'aux4_5' [58], 'aux5' =&gt; 'aux5_5' [59],\n#&gt; 'temperaturev' =&gt; 'temperaturev_5' [60], 'pressure' =&gt; 'pressure_5' [61],\n#&gt; 'port' =&gt; 'port_6' [62], 'valvestatus' =&gt; 'valvestatus_6' [63], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_6' [64], 'aux1' =&gt; 'aux1_6' [65], 'aux2' =&gt; 'aux2_6' [66],\n#&gt; 'aux3' =&gt; 'aux3_6' [67], 'aux4' =&gt; 'aux4_6' [68], 'aux5' =&gt; 'aux5_6' [69],\n#&gt; 'temperaturev' =&gt; 'temperaturev_6' [70], 'pressure' =&gt; 'pressure_6' [71],\n#&gt; 'port' =&gt; 'port_7' [72], 'valvestatus' =&gt; 'valvestatus_7' [73], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_7' [74], 'aux1' =&gt; 'aux1_7' [75], 'aux2' =&gt; 'aux2_7' [76],\n#&gt; 'aux3' =&gt; 'aux3_7' [77], 'aux4' =&gt; 'aux4_7' [78], 'aux5' =&gt; 'aux5_7' [79],\n#&gt; 'temperaturev' =&gt; 'temperaturev_7' [80], 'pressure' =&gt; 'pressure_7' [81],\n#&gt; 'port' =&gt; 'port_8' [82], 'valvestatus' =&gt; 'valvestatus_8' [83], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_8' [84], 'aux1' =&gt; 'aux1_8' [85], 'aux2' =&gt; 'aux2_8' [86],\n#&gt; 'aux3' =&gt; 'aux3_8' [87], 'aux4' =&gt; 'aux4_8' [88], 'aux5' =&gt; 'aux5_8' [89],\n#&gt; 'temperaturev' =&gt; 'temperaturev_8' [90], 'pressure' =&gt; 'pressure_8' [91],\n#&gt; 'port' =&gt; 'port_9' [92], 'valvestatus' =&gt; 'valvestatus_9' [93], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_9' [94], 'aux1' =&gt; 'aux1_9' [95], 'aux2' =&gt; 'aux2_9' [96],\n#&gt; 'aux3' =&gt; 'aux3_9' [97], 'aux4' =&gt; 'aux4_9' [98], 'aux5' =&gt; 'aux5_9' [99],\n#&gt; 'temperaturev' =&gt; 'temperaturev_9' [100], 'pressure' =&gt; 'pressure_9' [101],\n#&gt; 'port' =&gt; 'port_10' [102], 'valvestatus' =&gt; 'valvestatus_10' [103],\n#&gt; 'chamberstatus' =&gt; 'chamberstatus_10' [104], 'aux1' =&gt; 'aux1_10' [105], 'aux2'\n#&gt; =&gt; 'aux2_10' [106], 'aux3' =&gt; 'aux3_10' [107], 'aux4' =&gt; 'aux4_10' [108],\n#&gt; 'aux5' =&gt; 'aux5_10' [109], 'temperaturev' =&gt; 'temperaturev_10' [110],\n#&gt; 'pressure' =&gt; 'pressure_10' [111], 'port' =&gt; 'port_11' [112], 'valvestatus' =&gt;\n#&gt; 'valvestatus_11' [113], 'chamberstatus' =&gt; 'chamberstatus_11' [114], 'aux1' =&gt;\n#&gt; 'aux1_11' [115], 'aux2' =&gt; 'aux2_11' [116], 'aux3' =&gt; 'aux3_11' [117], 'aux4'\n#&gt; =&gt; 'aux4_11' [118], 'aux5' =&gt; 'aux5_11' [119], 'temperaturev' =&gt;\n#&gt; 'temperaturev_11' [120], 'pressure' =&gt; 'pressure_11' [121]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n# read_log(\"ex_log/FRMonitor_0012.log\", col_names = log_colnames)\n# repeated colnames are normal\nchamber_log_all &lt;- chamber_log_read |&gt;\n    pivot_longer(!c(epochtime), names_to = c(\".value\", \"variable\"), names_sep = \"_\") |&gt;\n    filter(\n        port %in% c(1:12) # we filter out all the rows with port -1\n    ) |&gt;\n    arrange(epochtime) |&gt; # just to be sure\n    mutate( # without grouping\n        change_id = consecutive_id(port, chamberstatus, valvestatus), #detecting all changes in status\n        datetime = as_datetime(epochtime) # we work in datetime\n    ) |&gt;\n    filter(\n        # & chamberstatus %in% c(1:3) # very conservative, we can adjust the focus window later in flux_fitting\n        chamberstatus == 1\n        & valvestatus == 10\n    ) |&gt;\n    mutate(\n        measurement_id = consecutive_id(change_id) # just getting rid of the missing id after filter\n        )\n#&gt; Warning: Expected 2 pieces. Missing pieces filled with `NA` in 10 rows [1, 2, 3, 4, 5,\n#&gt; 6, 7, 8, 9, 10].\n    \nchamber_log &lt;- chamber_log_all |&gt;\n    mutate(\n        .by = c(measurement_id),\n        closing = min(datetime),\n        opening = max(datetime)\n    ) |&gt;\n    select(measurement_id, port, closing, opening) |&gt;\n    distinct()\n\n# We make a separate df for temp and pressure so we keep the 4 seconds reads\nchamber_temp_pres &lt;- chamber_log_all |&gt;\n    mutate(\n        air_temp = temperaturev * 15, # need to ask the exact conversion factor, for now this one makes sense\n        pressure = pressure / 101.325 # need atm for fluxible\n    ) |&gt;\n    select(datetime, air_temp, pressure)\n\n# View(chamber_log)\n\nPossible improvements\n\ntake into account the chamber status better and use it to by-pass the start and end cuts in flux_fitting. Opening and closing status would be “cut” (not used for fitting but visible on the plot), and fully open would be “keep”.\nkeep the other columns\n\n\n\n\n\ndata_read &lt;- list.files(\n    \"ex_data\",\n    full.names = TRUE\n) |&gt;\n    map_dfr(\n        read_table\n    )\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: 1 parsing failure.\n#&gt; row col   expected     actual                                                  file\n#&gt; 368  -- 39 columns 17 columns 'ex_data/JFAADS2294-20241212-034037-DataLog_User.dat'\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n# read_table(\"ex_data/JFAADS2294-20241211-193921-DataLog_User.dat\")\n\ndata &lt;- data_read |&gt;\n    mutate(\n        f_datetime = as_datetime(paste(DATE, TIME))\n    ) |&gt;\n    left_join(chamber_temp_pres, by = join_by(f_datetime == datetime)) |&gt; # adding air temp and pressure here\n    select(f_datetime, CO2_dry, air_temp, pressure) # we keep it simple for now and work only on CO2\n\n# View(data)"
  },
  {
    "objectID": "tutorial.html#importing-log-file",
    "href": "tutorial.html#importing-log-file",
    "title": "Full tutorial",
    "section": "",
    "text": "Importing the log and turning it into a dataframe with chamber ID (port nb), chamber closing time and re-opening time.\n\nlibrary(tidyverse)\n\n# building col names\nchamber_colnames &lt;- c(\n    \"port\", \"valvestatus\", \"chamberstatus\",\n    \"aux1\", \"aux2\", \"aux3\", \"aux4\", \"aux5\",\n    \"temperaturev\", \"pressure\"\n    )\nlog_colnames &lt;- c(\n    \"epochtime\",\n    rep(chamber_colnames, times = 12)\n)\n\nchamber_log_read &lt;- list.files(\n    \"ex_log\",\n    full.names = TRUE\n) |&gt;\n    map_dfr(\n        read_log,\n        col_names = log_colnames\n    )\n#&gt; Warning: Duplicated column names deduplicated: 'port' =&gt; 'port_1' [12],\n#&gt; 'valvestatus' =&gt; 'valvestatus_1' [13], 'chamberstatus' =&gt; 'chamberstatus_1'\n#&gt; [14], 'aux1' =&gt; 'aux1_1' [15], 'aux2' =&gt; 'aux2_1' [16], 'aux3' =&gt; 'aux3_1'\n#&gt; [17], 'aux4' =&gt; 'aux4_1' [18], 'aux5' =&gt; 'aux5_1' [19], 'temperaturev' =&gt;\n#&gt; 'temperaturev_1' [20], 'pressure' =&gt; 'pressure_1' [21], 'port' =&gt; 'port_2'\n#&gt; [22], 'valvestatus' =&gt; 'valvestatus_2' [23], 'chamberstatus' =&gt;\n#&gt; 'chamberstatus_2' [24], 'aux1' =&gt; 'aux1_2' [25], 'aux2' =&gt; 'aux2_2' [26],\n#&gt; 'aux3' =&gt; 'aux3_2' [27], 'aux4' =&gt; 'aux4_2' [28], 'aux5' =&gt; 'aux5_2' [29],\n#&gt; 'temperaturev' =&gt; 'temperaturev_2' [30], 'pressure' =&gt; 'pressure_2' [31],\n#&gt; 'port' =&gt; 'port_3' [32], 'valvestatus' =&gt; 'valvestatus_3' [33], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_3' [34], 'aux1' =&gt; 'aux1_3' [35], 'aux2' =&gt; 'aux2_3' [36],\n#&gt; 'aux3' =&gt; 'aux3_3' [37], 'aux4' =&gt; 'aux4_3' [38], 'aux5' =&gt; 'aux5_3' [39],\n#&gt; 'temperaturev' =&gt; 'temperaturev_3' [40], 'pressure' =&gt; 'pressure_3' [41],\n#&gt; 'port' =&gt; 'port_4' [42], 'valvestatus' =&gt; 'valvestatus_4' [43], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_4' [44], 'aux1' =&gt; 'aux1_4' [45], 'aux2' =&gt; 'aux2_4' [46],\n#&gt; 'aux3' =&gt; 'aux3_4' [47], 'aux4' =&gt; 'aux4_4' [48], 'aux5' =&gt; 'aux5_4' [49],\n#&gt; 'temperaturev' =&gt; 'temperaturev_4' [50], 'pressure' =&gt; 'pressure_4' [51],\n#&gt; 'port' =&gt; 'port_5' [52], 'valvestatus' =&gt; 'valvestatus_5' [53], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_5' [54], 'aux1' =&gt; 'aux1_5' [55], 'aux2' =&gt; 'aux2_5' [56],\n#&gt; 'aux3' =&gt; 'aux3_5' [57], 'aux4' =&gt; 'aux4_5' [58], 'aux5' =&gt; 'aux5_5' [59],\n#&gt; 'temperaturev' =&gt; 'temperaturev_5' [60], 'pressure' =&gt; 'pressure_5' [61],\n#&gt; 'port' =&gt; 'port_6' [62], 'valvestatus' =&gt; 'valvestatus_6' [63], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_6' [64], 'aux1' =&gt; 'aux1_6' [65], 'aux2' =&gt; 'aux2_6' [66],\n#&gt; 'aux3' =&gt; 'aux3_6' [67], 'aux4' =&gt; 'aux4_6' [68], 'aux5' =&gt; 'aux5_6' [69],\n#&gt; 'temperaturev' =&gt; 'temperaturev_6' [70], 'pressure' =&gt; 'pressure_6' [71],\n#&gt; 'port' =&gt; 'port_7' [72], 'valvestatus' =&gt; 'valvestatus_7' [73], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_7' [74], 'aux1' =&gt; 'aux1_7' [75], 'aux2' =&gt; 'aux2_7' [76],\n#&gt; 'aux3' =&gt; 'aux3_7' [77], 'aux4' =&gt; 'aux4_7' [78], 'aux5' =&gt; 'aux5_7' [79],\n#&gt; 'temperaturev' =&gt; 'temperaturev_7' [80], 'pressure' =&gt; 'pressure_7' [81],\n#&gt; 'port' =&gt; 'port_8' [82], 'valvestatus' =&gt; 'valvestatus_8' [83], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_8' [84], 'aux1' =&gt; 'aux1_8' [85], 'aux2' =&gt; 'aux2_8' [86],\n#&gt; 'aux3' =&gt; 'aux3_8' [87], 'aux4' =&gt; 'aux4_8' [88], 'aux5' =&gt; 'aux5_8' [89],\n#&gt; 'temperaturev' =&gt; 'temperaturev_8' [90], 'pressure' =&gt; 'pressure_8' [91],\n#&gt; 'port' =&gt; 'port_9' [92], 'valvestatus' =&gt; 'valvestatus_9' [93], 'chamberstatus'\n#&gt; =&gt; 'chamberstatus_9' [94], 'aux1' =&gt; 'aux1_9' [95], 'aux2' =&gt; 'aux2_9' [96],\n#&gt; 'aux3' =&gt; 'aux3_9' [97], 'aux4' =&gt; 'aux4_9' [98], 'aux5' =&gt; 'aux5_9' [99],\n#&gt; 'temperaturev' =&gt; 'temperaturev_9' [100], 'pressure' =&gt; 'pressure_9' [101],\n#&gt; 'port' =&gt; 'port_10' [102], 'valvestatus' =&gt; 'valvestatus_10' [103],\n#&gt; 'chamberstatus' =&gt; 'chamberstatus_10' [104], 'aux1' =&gt; 'aux1_10' [105], 'aux2'\n#&gt; =&gt; 'aux2_10' [106], 'aux3' =&gt; 'aux3_10' [107], 'aux4' =&gt; 'aux4_10' [108],\n#&gt; 'aux5' =&gt; 'aux5_10' [109], 'temperaturev' =&gt; 'temperaturev_10' [110],\n#&gt; 'pressure' =&gt; 'pressure_10' [111], 'port' =&gt; 'port_11' [112], 'valvestatus' =&gt;\n#&gt; 'valvestatus_11' [113], 'chamberstatus' =&gt; 'chamberstatus_11' [114], 'aux1' =&gt;\n#&gt; 'aux1_11' [115], 'aux2' =&gt; 'aux2_11' [116], 'aux3' =&gt; 'aux3_11' [117], 'aux4'\n#&gt; =&gt; 'aux4_11' [118], 'aux5' =&gt; 'aux5_11' [119], 'temperaturev' =&gt;\n#&gt; 'temperaturev_11' [120], 'pressure' =&gt; 'pressure_11' [121]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n# read_log(\"ex_log/FRMonitor_0012.log\", col_names = log_colnames)\n# repeated colnames are normal\nchamber_log_all &lt;- chamber_log_read |&gt;\n    pivot_longer(!c(epochtime), names_to = c(\".value\", \"variable\"), names_sep = \"_\") |&gt;\n    filter(\n        port %in% c(1:12) # we filter out all the rows with port -1\n    ) |&gt;\n    arrange(epochtime) |&gt; # just to be sure\n    mutate( # without grouping\n        change_id = consecutive_id(port, chamberstatus, valvestatus), #detecting all changes in status\n        datetime = as_datetime(epochtime) # we work in datetime\n    ) |&gt;\n    filter(\n        # & chamberstatus %in% c(1:3) # very conservative, we can adjust the focus window later in flux_fitting\n        chamberstatus == 1\n        & valvestatus == 10\n    ) |&gt;\n    mutate(\n        measurement_id = consecutive_id(change_id) # just getting rid of the missing id after filter\n        )\n#&gt; Warning: Expected 2 pieces. Missing pieces filled with `NA` in 10 rows [1, 2, 3, 4, 5,\n#&gt; 6, 7, 8, 9, 10].\n    \nchamber_log &lt;- chamber_log_all |&gt;\n    mutate(\n        .by = c(measurement_id),\n        closing = min(datetime),\n        opening = max(datetime)\n    ) |&gt;\n    select(measurement_id, port, closing, opening) |&gt;\n    distinct()\n\n# We make a separate df for temp and pressure so we keep the 4 seconds reads\nchamber_temp_pres &lt;- chamber_log_all |&gt;\n    mutate(\n        air_temp = temperaturev * 15, # need to ask the exact conversion factor, for now this one makes sense\n        pressure = pressure / 101.325 # need atm for fluxible\n    ) |&gt;\n    select(datetime, air_temp, pressure)\n\n# View(chamber_log)\n\nPossible improvements\n\ntake into account the chamber status better and use it to by-pass the start and end cuts in flux_fitting. Opening and closing status would be “cut” (not used for fitting but visible on the plot), and fully open would be “keep”.\nkeep the other columns"
  },
  {
    "objectID": "tutorial.html#importing-data-file",
    "href": "tutorial.html#importing-data-file",
    "title": "Full tutorial",
    "section": "",
    "text": "data_read &lt;- list.files(\n    \"ex_data\",\n    full.names = TRUE\n) |&gt;\n    map_dfr(\n        read_table\n    )\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: 1 parsing failure.\n#&gt; row col   expected     actual                                                  file\n#&gt; 368  -- 39 columns 17 columns 'ex_data/JFAADS2294-20241212-034037-DataLog_User.dat'\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n#&gt; Warning: Missing column names filled in: 'X39' [39]\n#&gt; \n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; cols(\n#&gt;   .default = col_double(),\n#&gt;   DATE = col_date(format = \"\"),\n#&gt;   TIME = col_time(format = \"\"),\n#&gt;   X39 = col_logical()\n#&gt; )\n#&gt; ℹ Use `spec()` for the full column specifications.\n# read_table(\"ex_data/JFAADS2294-20241211-193921-DataLog_User.dat\")\n\ndata &lt;- data_read |&gt;\n    mutate(\n        f_datetime = as_datetime(paste(DATE, TIME))\n    ) |&gt;\n    left_join(chamber_temp_pres, by = join_by(f_datetime == datetime)) |&gt; # adding air temp and pressure here\n    select(f_datetime, CO2_dry, air_temp, pressure) # we keep it simple for now and work only on CO2\n\n# View(data)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tutorials to process Eosense flux chambers data",
    "section": "",
    "text": "This website presents how to use the fluxible R package to process data collected with Eosense ecosystem gas flux chambers.\n\nOverview"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]